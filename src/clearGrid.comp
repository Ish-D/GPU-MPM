#version 430 core

layout(local_size_x = GROUP_SIZE) in;

layout(std140, binding = 0) uniform ComputeParameters {
    uint size;
    float ifps;
    float radius;
    uint grid_size;
    float grid_scale;
    uint ranges_offset;
};

layout(std430, binding = 1) buffer CellVelocity {vec4 cell_velocity[];};
layout(std430, binding = 2) buffer CellMass {float cell_mass[];};

void main() {
    uint global_id = gl_GlobalInvocationID.x;
    [[branch]] if(global_id >= grid_size * grid_size * grid_size) return;

    cell_velocity[global_id] = vec4(0.0f);
    cell_mass[global_id] = 0.04f;
}